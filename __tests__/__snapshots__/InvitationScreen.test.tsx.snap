// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`buttonButtons function with Edit 1`] = `
<View>
  <LHCButton
    onSelected={[Function]}
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      Update Invitation
    </Text>
  </LHCButton>
  <LHCButton
    onSelected={[Function]}
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      Delete Invitation
    </Text>
  </LHCButton>
</View>
`;

exports[`buttonButtons function with New 1`] = `
<LHCButton
  onSelected={[Function]}
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
  >
    Create Invitation
  </Text>
</LHCButton>
`;

exports[`buttonButtons function with Reply 1`] = `
<View>
  <LHCButton
    onSelected={[Function]}
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      Accept Invitation
    </Text>
  </LHCButton>
  <LHCButton
    onSelected={[Function]}
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      Reject Invitation
    </Text>
  </LHCButton>
</View>
`;

exports[`should display InvitationScreen with no errors 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#2c3e50",
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#2980b6",
        "margin": 10,
        "opacity": 1,
        "paddingVertical": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      From:
    </Text>
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      a
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#2980b6",
        "margin": 10,
        "opacity": 1,
        "paddingVertical": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      To:
    </Text>
    <Text
      style={
        Object {
          "color": "#fff",
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      a
    </Text>
  </View>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    editable={true}
    keyboardType="default"
    onChangeText={[Function]}
    placeholder="Reason"
    placeholderTextColor="rgba(225,225,225,0.7)"
    rejectResponderTermination={true}
    returnKeyType="done"
    style={
      Object {
        "backgroundColor": "rgba(225,225,225,0.2)",
        "color": "#fff",
        "height": 40,
        "marginBottom": 10,
        "padding": 10,
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <Text
    style={
      Object {
        "color": "#fff",
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
  >
    Status: 
    
  </Text>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View />
</View>
`;
